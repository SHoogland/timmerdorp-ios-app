name: IOS build

on:
  push:
    branches: [ "main" ]

concurrency: production_release

jobs:
  build:
    name: Build and Test using available iPhone simulator
    runs-on: macos-13

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.1
        with:
          node-version: '20'

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: configure env vars
        run: node config/set-env-vars.mjs
        env:
          PARSE_APP_ID: ${{ secrets.PARSE_APP_ID }}
          PARSE_JS_KEY: ${{ secrets.PARSE_JS_KEY }}

      - name: Appstore connect key from env
        run: echo $APPSTORE_CONNECT_KEY | base64 --decode > ./AuthKey.p8
        env:
          APPSTORE_CONNECT_KEY: ${{ secrets.APPSTORE_CONNECT_KEY }}

      - name: Select Xcode Version
        run: sudo xcode-select -switch /Applications/Xcode_15.2.app

      - name: Fastlane build
        run: bundle exec fastlane build
        env: 
          P12_BASE64: ${{ secrets.P12_BASE64 }}
          MOBILEPROVISION_BASE64: ${{ secrets.MOBILEPROVISION_BASE64 }}

      # - name: Set Default Scheme
      #   run: |
      #     scheme_list=$(xcodebuild -list -json | tr -d "\n")
      #     default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
      #     echo $default | cat >default
      #     echo Using default scheme: $default
      # - name: Build
      #   env:
      #     scheme: ${{ 'default' }}
      #     platform: ${{ 'iOS Simulator' }}
      #   run: |
      #     # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
      #     device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
      #     if [ $scheme = default ]; then scheme=$(cat default); fi
      #     if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
      #     file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
      #     xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
      # - name: Test
      #   env:
      #     scheme: ${{ 'default' }}
      #     platform: ${{ 'iOS Simulator' }}
      #   run: |
      #     # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
      #     device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
      #     if [ $scheme = default ]; then scheme=$(cat default); fi
      #     if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
      #     file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
      #     xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
